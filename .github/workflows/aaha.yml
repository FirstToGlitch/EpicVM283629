on:
  workflow_dispatch:
    inputs:
      authcode:
        description: 'Type CRD Code'
        required: true
      pincode:
        description: 'Set PIN'
        required: true

jobs:
  build:
    runs-on: windows-latest

    steps:
    - name: Preparing to Setup.. 
      run: ./start.ps1
    - run: Set-ItemProperty -Path 'HKLM:\System\CurrentControlSet\Control\Terminal Server\WinStations\RDP-Tcp' -name "UserAuthentication" -Value 1
    - run: Set-LocalUser -Name "runneradmin" -Password (ConvertTo-SecureString -AsPlainText "Windows@10" -Force)
    - name: Modify Registry Settings
      run: |
        reg add "HKEY_LOCAL_MACHINE\HARDWARE\DESCRIPTION\System" /v SystemBiosVersion /t REG_DWORD /d 1 /f
        reg add "HKEY_LOCAL_MACHINE\HARDWARE\DESCRIPTION\System" /v SystemBiosDate /t REG_DWORD /d 1 /f
    - name: Starting CRD... 
      run: ${{ github.event.inputs.authcode }} -pin=${{ github.event.inputs.pincode }}
    - name: Done! Keep Active. 
      run: ./timeout.ps1
    
   # - name: Download
 #     run: Invoke-WebRequest https://bin.equinox.io/c/4VmDzA7iaHb/ngrok-stable-windows-amd64.zip -OutFile ngrok.zip
  #  - name: Extract
 #     run: Expand-Archive ngrok.zip
  #  - name: Auth
#      run: .\ngrok\ngrok.exe authtoken $Env:NGROK_AUTH_TOKEN
 #     env:
#        NGROK_AUTH_TOKEN: ${{ secrets.NGROK_AUTH_TOKEN }}
##    - name: Enable TS
#      run: Set-ItemProperty -Path 'HKLM:\System\CurrentControlSet\Control\Terminal Server'-name "fDenyTSConnections" -Value 0
#    - run: Enable-NetFirewallRule -DisplayGroup "Remote Desktop"
  #  - run: Set-ItemProperty -Path 'HKLM:\System\CurrentControlSet\Control\Terminal Server\WinStations\RDP-Tcp' -name "UserAuthentication" -Value 1
  #  - run: Set-LocalUser -Name "runneradmin" -Password (ConvertTo-SecureString -AsPlainText "Windows@10" -Force)
 #   - name: Create Tunnel
#      run: .\ngrok\ngrok.exe tcp 3389
